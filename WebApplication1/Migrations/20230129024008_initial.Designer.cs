// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(RestDbContext))]
    [Migration("20230129024008_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Domain.Item", b =>
                {
                    b.Property<Guid>("itemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("itemId");

                    b.ToTable("item");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.bill", b =>
                {
                    b.Property<Guid>("billId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("orderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("totalBill")
                        .HasColumnType("int");

                    b.HasKey("billId");

                    b.HasIndex("orderItemId");

                    b.ToTable("bill");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.order", b =>
                {
                    b.Property<Guid>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("statusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("tablenumber")
                        .HasColumnType("int");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("orderId");

                    b.HasIndex("statusId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.orderItem", b =>
                {
                    b.Property<Guid>("orderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("itemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("orderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("orderItemId");

                    b.HasIndex("itemId");

                    b.HasIndex("orderId");

                    b.ToTable("orderItem");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.orderStatus", b =>
                {
                    b.Property<Guid>("statusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("statusId");

                    b.ToTable("orderStatus");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.bill", b =>
                {
                    b.HasOne("WebApplication1.Models.Domain.orderItem", "orderItem")
                        .WithMany("bill")
                        .HasForeignKey("orderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orderItem");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.order", b =>
                {
                    b.HasOne("WebApplication1.Models.Domain.orderStatus", "status")
                        .WithMany("Walks")
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("status");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.orderItem", b =>
                {
                    b.HasOne("WebApplication1.Models.Domain.Item", "item")
                        .WithMany("orderItem")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Domain.order", "order")
                        .WithMany("orderItem")
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");

                    b.Navigation("order");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.Item", b =>
                {
                    b.Navigation("orderItem");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.order", b =>
                {
                    b.Navigation("orderItem");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.orderItem", b =>
                {
                    b.Navigation("bill");
                });

            modelBuilder.Entity("WebApplication1.Models.Domain.orderStatus", b =>
                {
                    b.Navigation("Walks");
                });
#pragma warning restore 612, 618
        }
    }
}
